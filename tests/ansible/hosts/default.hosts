# code: language=ini
# vim: syntax=dosini

# When running the tests outside CI, make a single 'target' host which is the
# local machine. The ansible_user override is necessary since some tests want a
# fixed ansible.cfg remote_user setting to test against.
# os.environ['USER'] is an empty string on GitHub Actions macOS runners.
target ansible_host=localhost ansible_user="{{ lookup('pipe', 'whoami') }}"

[test-targets]
target

[linux_containers]

[issue905]
ssh-common-args ansible_host=localhost ansible_user="{{ lookup('pipe', 'whoami') }}"

[issue905:vars]
ansible_ssh_common_args=-o PermitLocalCommand=yes -o LocalCommand="touch {{ ssh_args_canary_file }}"
ssh_args_canary_file=/tmp/ssh_args_by_inv_{{ inventory_hostname }}

[issue1079]
wait-for-connection ansible_host=localhost ansible_user="{{ lookup('pipe', 'whoami') }}"

[tt_targets_bare]
tt-bare

[tt_become_bare]
tt-become-bare

[tt_become_bare:vars]
ansible_host=localhost
ansible_user="{{ lookup('pipe', 'whoami') }}"

[tt_become_by_inv]
tt-become                   ansible_become="{{ 'true' | trim }}" ansible_become_user=root
tt-become-exe               ansible_become=true ansible_become_exe="{{ 'sudo' | trim }}" ansible_become_user=root
tt-become-flags             ansible_become=true ansible_become_flags="{{ '--set-home --stdin --non-interactive' | trim }}" ansible_become_user=root
tt-become-method            ansible_become=true ansible_become_method="{{ 'sudo' | trim }}" ansible_become_user=root
tt-become-pass              ansible_become=true ansible_become_pass="{{ 'pw_required_password' | trim }}" ansible_become_user=mitogen__pw_required
tt-become-user              ansible_become=true ansible_become_user="{{ 'root' | trim }}"

[tt_become_by_inv:vars]
ansible_host=localhost
ansible_user="{{ lookup('pipe', 'whoami') }}"

[tt_targets_inventory]
tt-host                     ansible_host="{{ 'localhost' | trim }}"    ansible_password=has_sudo_nopw_password    ansible_user=mitogen__has_sudo_nopw
tt-host-key-checking        ansible_host=localhost    ansible_host_key_checking="{{ 'false' | trim }}"    ansible_password=has_sudo_nopw_password    ansible_user=mitogen__has_sudo_nopw
tt-password                 ansible_host=localhost    ansible_password="{{ 'has_sudo_nopw_password' | trim }}"    ansible_user=mitogen__has_sudo_nopw
tt-port                     ansible_host=localhost    ansible_password=has_sudo_nopw_password    ansible_port="{{ 22 | int }}"    ansible_user=mitogen__has_sudo_nopw
tt-private-key-file         ansible_host=localhost    ansible_private_key_file="{{ git_basedir }}/tests/data/docker/mitogen__has_sudo_pubkey.key"    ansible_user=mitogen__has_sudo_pubkey
tt-python-interpreter       ansible_host=localhost    ansible_password=has_sudo_nopw_password    ansible_python_interpreter="{{ ansible_playbook_python | trim }}"    ansible_user=mitogen__has_sudo_nopw
tt-remote-user              ansible_host=localhost    ansible_password=has_sudo_nopw_password    ansible_user="{{ 'mitogen__has_sudo_nopw' | trim }}"
tt-ssh-executable           ansible_host=localhost    ansible_password=has_sudo_nopw_password    ansible_ssh_executable="{{ 'ssh' | trim }}"    ansible_user=mitogen__has_sudo_nopw
tt-timeout                  ansible_host=localhost    ansible_password=has_sudo_nopw_password    ansible_timeout="{{ 5 | int }}"    ansible_user=mitogen__has_sudo_nopw
